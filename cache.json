{"article":{"/home/lab/fedorsarafanov.github.com/src/article/about.html":"<h1>О блоге и авторе</h1>\n<!--tags:js-->\n<!--d-->  \nДобро пожаловать, дорогой читатель!   \n    \nЭтот блог создан для нескольких целей.         \n \nПервая - это публикация решений вузовских задач по физике и прочих материалов, в том числе, статей и книг (как переведенных и/или скопированных, так и оригинальных).\n \nВторая - это полезная информация по компьютерным темам: железо, программирование - linux, bash, node.js, javascript, python, веб -  html5, css3 и многие другие интересные вещи, до которых у меня доберутся руки написать сюда пост. \n<!--ed-->  \n\n## Об авторе  \n<img src=\"/img/i.png\" alt=\"Сарафанов Ф.Г.\">\n\nЕсли мы не знакомы, скажу пару слов о себе. \n\nРодился в г. Нижнем Новгороде 30 августа 1998 года. \n\nНациональность — русский. \n\nОбразование — учусь на радиофизическом факультете ННГУ им. Лобачевского.\n\n### Хобби \n\nЗанимаюсь системным и веб-программированием. \n\nСчитаю, что программирование должно быть не целевым предметом, а инструментом, позволяющим сделать много интересного и полезного, причем - быстро и эффективно. \n\n### Предпочтения\n\nВ качестве языка разметки предпочитаю LaTeX и markdown. LaTeX позволяет получить безупречное качество научных публикаций. О нем в этом блоге тоже будут заметки. \n\nMarkdown удобен для написания этих постов, позволяя (как это делает и LaTeX) абстрагироваться от верстки, сосредоточившись на содержимом и возложив генерацию верстки по заданному шаблону на компьютер.","/home/lab/fedorsarafanov.github.com/src/article/datemodification.html":"<h1>Смена времени модификации / создания файла в Linux</h1>\n<!--tags:linux-->\n<!--d-->  \n`touch -a -m -t 201701011212.00 fileName.ext`\n\nгде параметры:\n\n`-a = accessed` (доступ)\n\n`-m = modified` (модификация)\n\n`-t = timestamp` (форматированное время: `[[CC]YY]MMDDhhmm[.ss]`)\n\n<!--ed-->  ","/home/lab/fedorsarafanov.github.com/src/article/bashhistory.html":"<h1>Настройка истории bash</h1>\n<!--tags:bash-->\n<!--d-->  \nМожно облегчить себе пользование терминалом, нехитрым образом настроив bash и используя некоторые удобные команды.\n<!--ed-->\n\nВсе команды дописываются в  файл `~/bashrc`.\n\n## Размер истории\n\n```bash\nHISTSIZE=5000\nHISTFILESIZE=10000\n```\nПервая определяет количество команд, хранимых в памяти, вторая — в файле.\n\n## Запись истории\n\n```bash\nshopt -s histappend\n```\n\nЕсли опция `histappend` выставлена - история команд будет добавлена в файл `$HISTFILE`, в противном случае файл будет перезаписан. Опция по умолчанию отключена.\n\n## Фильтрация истории\n\n```bash\nHISTCONTROL=\"ignoredups\"\n```\n\n`$HISTCONTROL` управляет сохранением истории. Есть несколько других полезных опций, например \n\n- `ignorespace`, команды которые начинаются с пробела не будут сохраняться\n- `erasedups`, все предыдущие команды, которые совпадают с текущей будут удалены из истории.\n\n`$HISTIGNORE` позволяет через точку с запятой записать команды, которые не должны попасть в историю.\n\n## Посткоманды\n\n```bash\nPROMPT_COMMAND=\"history -n; history -w; history -c; history -r; $PROMPT_COMMAND\"\n```\n\nВ bash есть одна малоизвестная переменная с названием `$PROMPT_COMMAND`, назначение которой — выполнение какой-то команды перед выводом приглашения, заданного переменной `$PS1`. В этой переменной можно задать скрипт, который будет выполняться перед каждым выводом приглашения для новой команды.\n\n## Итоговое решение\n\nТакая настройка обеспечивает многотерминальную работу с синхронизацией истории и удалением дубликатов.\n\n\tHISTSIZE=5000\n\tHISTFILESIZE=40000\n\tshopt -s histappend\n\tHISTCONTROL=ignoredups:erasedups\n\tPROMPT_COMMAND=\"history -n; history -w; history -c; history -r; $PROMPT_COMMAND\"\n\nЧтобы применить настройки без выхода из сессии X, достаточно выполнить\n\n\tsource ~/.bashrc\n\n\n## Удобные команды \n\n`Ctrl-R` в bash запускает поиск по истории команд. \n\nКоманда \n```bash\ncd -\n```\nвозвращает к последней посещенной директории. \n\n`Esc+.` вызывает последний упомянутый объект. \n\nНапример, если набрать\n```bash\ncat /etc/apt/sources.list\n```\nа затем rm и нажать `Esc+.`, то команда будет автоматически завершена:\n```bash\nrm /etc/apt/sources.list\n```","/home/lab/fedorsarafanov.github.com/src/article/windows-flash.html":"<h1>Создание загрузочной флешки с Windows из под (Arch)Linux</h1>\n<!--tags:linux-->\n<!--d-->  \nМожет понадобиться записать флешку с Windows, когда в наличии только Linux? \n\nЭто вполне реально. \n\nПриведенный способ наиболее легко применяется в системах ArchLinux и Manjaro, так как в их AUR репозиториях есть `ms-sys`. \n<!--ed-->  \n\nДля начала, установим необходимые утилиты (если они отсутствуют):\n<bash title=\"~/\"><!--\n--><span class=\"ps\">~</span>yaourt -S util-linux ntfs-3g ms-sys\n</bash>  \n\nДля дальнейших действий необходимо определить флешку. Сделать это можно либо через программу `GParted`, либо в консоли с помощью программы `df` в консоли. \n<bash title=\"~/\"><!--\n--><span class=\"ps\">~</span>df\nФайловая система Размер Использовано  Дост Использовано% Cмонтировано в\ndev                1,9G            0  1,9G            0% /dev\nrun                1,9G         1,2M  1,9G            1% /run\n/dev/sda4          188G          21G  158G           12% /\ntmpfs              1,9G         162M  1,8G            9% /dev/shm\ntmpfs              1,9G            0  1,9G            0% /sys/fs/cgroup\ntmpfs              1,9G          24K  1,9G            1% /tmp\n/dev/sda6          321M         256K  321M            1% /boot/efi\ntmpfs              386M          12K  386M            1% /run/user/1000\n/dev/sdb1           15G         3,7G   11G           26% /run/media/lab/USB DISK\n</bash>  \n\nВ данном случае раздел на флешке имеет адрес `/dev/sdb1`, а сама флешка - `/dev/sdb`.\n\nНа всякий случай отмонтируем флешку, если она уже примонтирована:\n<bash title=\"~/\"><!--\n--><span class=\"ps\">~</span>sudo umount /dev/sdb1\n[sudo] пароль для lab: \n</bash>  \nЗатем отформатируем флешку: \n<bash title=\"~/\"><!--\n--><span class=\"ps\">~</span>sudo mkfs.ntfs -n 'Windows' /dev/sdb1\n</bash>  \nИ примонтируем все что нужно:\n<bash title=\"~/\"><span class=\"comment\">#Создадим папки, куда будут подключаться iso-образ и флешка:</span>\n<span class=\"ps\">~</span>sudo mkdir -p /mnt/{usb,iso}\n<span class=\"ps\">~</span>sudo chmod 777 /mnt/{usb,iso}\n<span class=\"comment\">#Монтируем iso-образ и флешку:</span>\n<span class=\"ps\">~</span>sudo mount -o loop ~/Загрузки/win7.iso /mnt/iso\n<span class=\"ps\">~</span>sudo mount /dev/sdb1 /mnt/usb\n</bash>  \nТеперь копируем все установочные файлы Windows:\n<bash title=\"~/\"><!--\n--><span class=\"ps\">~</span>cp -r /mnt/iso/* /mnt/usb/\n</bash>\n\nИ устанавливаем загрузчик Windows 7 на флешку:\n<bash title=\"~/\"><!--\n--><span class=\"ps\">~</span>ms-sys -7 /dev/sdb\n</bash> \n"}}
